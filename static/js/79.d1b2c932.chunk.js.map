{"version":3,"file":"static/js/79.d1b2c932.chunk.js","mappings":"4QAGMA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,wUAoBVE,EAAeF,EAAAA,GAAAA,IAAH,+CAIZG,GAAQH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,gcAyBLK,EAAQL,EAAAA,GAAAA,MAAH,4hBA0BLM,GAAQN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,qHAQLQ,EAASR,EAAAA,GAAAA,OAAH,ktB,SCxEL,SAASS,IACd,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MACTC,GAAUD,EAAAA,EAAAA,MACVE,GAAaF,EAAAA,EAAAA,MAQbG,EAAmBC,EAAAA,GAAW,CAClCC,KAAMD,EAAAA,KAAaE,SAAS,2BAC5BC,MAAOH,EAAAA,KACJG,MAAM,2BACND,SAAS,2BACZE,SAAUJ,EAAAA,KAAaE,SAAS,6BAQlC,OACE,SAAC,KAAD,CACEG,cArBkB,CACpBJ,KAAM,GACNE,MAAO,GACPC,SAAU,IAmBRL,iBAAkBA,EAClBO,SATiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9Bf,GAASgB,EAAAA,EAAAA,IAASF,IAClBC,GACD,EAGC,UAKE,UAAC1B,EAAD,CAAY4B,aAAa,MAAzB,WACE,UAACzB,EAAD,YACE,SAACC,EAAD,CACEyB,GAAIhB,EACJiB,KAAK,OACLX,KAAK,OACLY,YAAY,IACZC,MAAM,8FAER,SAAC1B,EAAD,CAAO2B,QAASpB,EAAhB,mBACA,SAACN,EAAD,CAAO2B,UAAU,MAAMf,KAAK,aAE9B,UAAChB,EAAD,YACE,SAACC,EAAD,CAAOyB,GAAId,EAASe,KAAK,QAAQX,KAAK,QAAQY,YAAY,OAC1D,SAACzB,EAAD,CAAO2B,QAASlB,EAAhB,qBACA,SAACR,EAAD,CAAO2B,UAAU,MAAMf,KAAK,cAE9B,UAAChB,EAAD,YACE,SAACC,EAAD,CACEyB,GAAIb,EACJc,KAAK,WACLX,KAAK,WACLY,YAAY,OAEd,SAACzB,EAAD,CAAO2B,QAASjB,EAAhB,uBACA,SAACT,EAAD,CAAO2B,UAAU,MAAMf,KAAK,iBAE9B,SAACV,EAAD,CAAQqB,KAAK,SAAb,yBAIP,CC1ED,IAAMK,EAAgBlC,EAAAA,GAAAA,QAAH,4CAIbmC,EAAYnC,EAAAA,GAAAA,IAAH,kUCHA,SAASoC,IACtB,OACE,SAACF,EAAD,WACE,SAACC,EAAD,WACE,SAAC1B,EAAD,OAIP,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.js","pages/Register/Register.styled.js","pages/Register/Register.js"],"sourcesContent":["import { Form, Field, ErrorMessage } from 'formik';\nimport styled from 'styled-components';\n\nconst SignUpForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  padding: 36px 24px;\n  margin: 0 auto;\n\n  width: 99%;\n\n  background-color: #fefefe;\n\n  box-shadow: 0px 8px 12px -4px rgba(50, 88, 130, 0.32);\n  border-radius: 15px;\n\n  @media screen and (min-width: 768px) {\n    width: 610px;\n  }\n`;\n\nconst FormControls = styled.div`\n  position: relative;\n`;\n\nconst Input = styled(Field)`\n  width: 100%;\n  height: 50px;\n\n  padding: 8px 16px;\n\n  font-size: 16px;\n\n  color: #010101;\n  background-color: transparent;\n\n  border: 1px solid rgb(200, 200, 200);\n  border-radius: 10px;\n  outline: none;\n\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:focus,\n  &:not(:placeholder-shown) {\n    border-color: #010101;\n  }\n  &:not(:focus) {\n    border-color: rgb(200, 200, 200);\n  }\n`;\n\nconst Label = styled.label`\n  position: absolute;\n  top: 50%;\n  left: 16px;\n  transform: translateY(-50%);\n\n  padding: 2px;\n\n  font-size: 16px;\n\n  color: rgb(200, 200, 200);\n\n  pointer-events: none;\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  input:focus ~ &,\n  input:not(:placeholder-shown) ~ & {\n    transform: translateY(-35px) scale(0.8);\n    color: #010101;\n    background-color: #fefefe;\n  }\n`;\n\nconst Error = styled(ErrorMessage)`\n  position: absolute;\n  bottom: -30%;\n  left: 4px;\n  font-size: 12px;\n  color: #ff4500;\n`;\n\nconst Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  margin: 0 auto;\n\n  min-width: 150px;\n  height: 50px;\n\n  font-size: 16px;\n  letter-spacing: 1px;\n  text-align: center;\n\n  color: #010101;\n  background-color: #ededed;\n\n  border: 1px solid rgb(200, 200, 200);\n  border-radius: 10px;\n\n  cursor: pointer;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: #fefefe;\n    background-color: #1d976c;\n    border-color: #1d976c;\n  }\n  &:disabled {\n    background-color: #e2e2e2;\n    color: #636363;\n  }\n`;\n\nexport { SignUpForm, FormControls, Input, Label, Error, Button };\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport {\n  SignUpForm,\n  FormControls,\n  Input,\n  Label,\n  Error,\n  Button,\n} from './RegisterForm.styled';\n\nexport function RegisterForm() {\n  const dispatch = useDispatch();\n  const nameId = nanoid();\n  const emailId = nanoid();\n  const passwordId = nanoid();\n\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const validationSchema = Yup.object({\n    name: Yup.string().required('This field is required.'),\n    email: Yup.string()\n      .email('Invalid e-mail address.')\n      .required('This field is required.'),\n    password: Yup.string().required('This field is required.'),\n  });\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(register(values));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      <SignUpForm autoComplete=\"off\">\n        <FormControls>\n          <Input\n            id={nameId}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\" \"\n            title=\"Name may contain only letters, apostrophe, dash and spaces, between 4 and 32 characters.\"\n          />\n          <Label htmlFor={nameId}>Name</Label>\n          <Error component=\"div\" name=\"name\" />\n        </FormControls>\n        <FormControls>\n          <Input id={emailId} type=\"email\" name=\"email\" placeholder=\" \" />\n          <Label htmlFor={emailId}>E-mail</Label>\n          <Error component=\"div\" name=\"email\" />\n        </FormControls>\n        <FormControls>\n          <Input\n            id={passwordId}\n            type=\"password\"\n            name=\"password\"\n            placeholder=\" \"\n          />\n          <Label htmlFor={passwordId}>Password</Label>\n          <Error component=\"div\" name=\"password\" />\n        </FormControls>\n        <Button type=\"submit\">Sign Up</Button>\n      </SignUpForm>\n    </Formik>\n  );\n}\n","import styled from 'styled-components';\n\nconst SignUpSection = styled.section`\n  padding: 36px 0;\n`;\n\nconst Container = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media screen and (min-width: 480px) {\n    width: 480px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 1200px;\n  }\n`;\n\nexport { SignUpSection, Container };\n","import { RegisterForm } from 'components/RegisterForm';\nimport { SignUpSection, Container } from './Register.styled';\n\nexport default function Register() {\n  return (\n    <SignUpSection>\n      <Container>\n        <RegisterForm />\n      </Container>\n    </SignUpSection>\n  );\n}\n"],"names":["SignUpForm","styled","Form","FormControls","Input","Field","Label","Error","ErrorMessage","Button","RegisterForm","dispatch","useDispatch","nameId","nanoid","emailId","passwordId","validationSchema","Yup","name","required","email","password","initialValues","onSubmit","values","resetForm","register","autoComplete","id","type","placeholder","title","htmlFor","component","SignUpSection","Container","Register"],"sourceRoot":""}